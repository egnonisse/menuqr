---
description: 
globs: 
alwaysApply: true
---
# Processus Post-Mise √† Jour Standard - MenuQR

Ce document d√©crit le workflow obligatoire √† suivre apr√®s chaque modification du code pour assurer la qualit√© et le d√©ploiement correct de l'application MenuQR.

## **Workflow Obligatoire**

### **1. üß™ Test Local (OBLIGATOIRE)**
```bash
npm run dev
```
- **V√©rifier** que l'application d√©marre sans erreur
- **Tester** les nouvelles fonctionnalit√©s impl√©ment√©es
- **S'assurer** qu'aucune r√©gression n'a √©t√© introduite
- **Confirmer** que l'interface fonctionne correctement

### **2. üìã Validation Git**
```bash
git status
```
- **Examiner** tous les fichiers modifi√©s
- **V√©rifier** qu'aucun fichier ind√©sirable n'est inclus (.env, node_modules, etc.)
- **Stag√©** les changements appropri√©s :
```bash
git add .
# OU pour √™tre plus s√©lectif :
git add src/specific/file.tsx
```

### **3. üí¨ Commit avec Message Descriptif**
```bash
git commit -m "type: description claire de la modification"
```

**Format des messages de commit :**
- `feat:` - Nouvelle fonctionnalit√©
- `fix:` - Correction de bug
- `refactor:` - Refactorisation sans changement fonctionnel
- `style:` - Changements de style/UI
- `docs:` - Mise √† jour de documentation
- `chore:` - T√¢ches de maintenance

**Exemple de bons messages :**
- `feat: Add @ mentions system for dish feedback`
- `fix: Resolve Prisma connection timeout issue`
- `refactor: Simplify feedback form UI components`

### **4. üöÄ Push vers GitHub**
```bash
git push origin main
```
- **Synchroniser** avec le repository distant
- **D√©clencher** le pipeline de d√©ploiement automatique

### **5. ‚è≥ Surveillance D√©ploiement Vercel**
- **Surveiller** le build automatique sur Vercel
- **V√©rifier** qu'aucune erreur de build n'appara√Æt
- **Attendre** la fin du d√©ploiement (g√©n√©ralement 1-3 minutes)

### **6. ‚úÖ Validation Production**
- **Tester** l'URL de production : `https://menuqr-restaurant-*.vercel.app`
- **V√©rifier** que les changements sont bien visibles
- **Confirmer** le bon fonctionnement des nouvelles fonctionnalit√©s
- **Tester** sur mobile si applicable

## **R√®gles Importantes**

### **üö´ Ne JAMAIS :**
- Commiter sans tester localement
- Pusher avec des erreurs de compilation
- D√©ployer sans v√©rifier la production
- Oublier de tester sur diff√©rentes tailles d'√©cran
- Commiter des fichiers de configuration sensibles (.env)

### **‚úÖ TOUJOURS :**
- Tester en local AVANT de commiter
- √âcrire des messages de commit clairs
- V√©rifier le d√©ploiement en production
- Documenter les changements majeurs
- Informer l'utilisateur du statut du d√©ploiement

## **Checklist Rapide**

Avant de dire "C'est termin√©" :

- [ ] ‚úÖ Test local r√©ussi (`npm run dev`)
- [ ] ‚úÖ Git status v√©rifi√©
- [ ] ‚úÖ Commit avec message descriptif
- [ ] ‚úÖ Push vers GitHub effectu√©
- [ ] ‚úÖ Build Vercel surveill√©
- [ ] ‚úÖ Production test√©e et valid√©e
- [ ] ‚úÖ Utilisateur inform√© du succ√®s

## **En Cas de Probl√®me**

### **Erreur de Build Local**
1. V√©rifier les erreurs TypeScript
2. Contr√¥ler les imports manquants
3. Valider la syntaxe des composants React

### **√âchec de D√©ploiement Vercel**
1. Consulter les logs de build sur Vercel
2. V√©rifier les variables d'environnement
3. Tester une version simplifi√©e en local

### **Probl√®me en Production**
1. Rollback rapide si n√©cessaire
2. Investiguer les diff√©rences entre local et prod
3. V√©rifier la base de donn√©es et les API

## **Communication avec l'Utilisateur**

### **Pendant le Processus :**
- "Je teste les modifications en local..."
- "D√©ploiement en cours sur Vercel..."
- "Validation de la production..."

### **√Ä la Fin :**
- "‚úÖ D√©ploy√© avec succ√®s ! URL de production : [lien]"
- "üîó V√©rifiez √† cette adresse : [URL]"
- "Les nouvelles fonctionnalit√©s sont maintenant live !"

---

**Ce processus garantit la qualit√© et la fiabilit√© de chaque mise √† jour de MenuQR.**

